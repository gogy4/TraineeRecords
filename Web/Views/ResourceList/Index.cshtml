@model WebApplication1.Models.ResourcesListViewModel

@{
    ViewData["Title"] = "Список направлений и проектов";
}
@if (!string.IsNullOrEmpty(Model.Errors))
{
    <div class="alert alert-danger">@Model.Errors</div>
}

@if (!string.IsNullOrEmpty(Model.Success))
{
    <div class="alert alert-success">@Model.Success</div>
}
<h2>Список направлений и проектов</h2>

<div class="mb-3">
    @if (Model.ActiveTab == "projects")
    {
        <a href="/CreateResource?resourceType=Project" class="btn btn-success">Создать проект</a>
    }
    else{    
        <a href="/CreateResource?resourceType=Direction" class="btn btn-success">Создать направление</a>
    }
</div>

<form method="get" asp-action="Index" id="searchForm">
    <input type="text" name="searchQuery" placeholder="Поиск..." value="@Model.SearchQuery"/>
    <input type="hidden" name="activeTab" id="activeTab" value="@Model.ActiveTab"/>
    <button type="submit">🔍 Найти</button>
</form>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link @(Model.ActiveTab == "projects" ? "active" : "")" id="projects-tab" data-toggle="tab"
           href="#projects">Проекты</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(Model.ActiveTab == "directions" ? "active" : "")" id="directions-tab" data-toggle="tab"
           href="#directions">Направления</a>
    </li>
</ul>

<div class="tab-content">
    <div class="tab-pane fade @(Model.ActiveTab == "projects" ? "show active" : "")" id="projects">
        <h3>Проекты</h3>
        <table class="table">
            <thead>
            <tr>
                <th>
                    <a href="@Url.Action("Index", new
                             {
                                 activeTab = Model.ActiveTab, searchQuery = Model.SearchQuery,
                                 sortOrder = Model.SortOrder == "name" ? "name_desc" : "name",
                                 page = Model.CurrentPage, pageSize = Model.PageSize
                             })"
                       class="sort-link" data-sort="name">
                        Название @(Model.SortOrder == "name" ? "🔽" : Model.SortOrder == "name_desc" ? "🔼" : "")
                    </a>
                </th>

                <th>
                    <a href="@Url.Action("Index", new { activeTab = Model.ActiveTab, searchQuery = Model.SearchQuery, sortOrder = Model.SortOrder == "trainees" ? "trainees_desc" : "trainees", page = Model.CurrentPage, pageSize = Model.PageSize })"
                       class="sort-link" data-sort="trainees">
                        Кол-во
                        стажеров @(Model.SortOrder == "trainees" ? "🔽" : Model.SortOrder == "trainees_desc" ? "🔼" : "")
                    </a>
                </th>
                <th>Стажеры</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var project in Model.Projects)
            {
                <tr>
                    <td>@project.Name</td>
                    <td>@project.CountTrainees</td>
                    <td>
                        <button class="toggle-trainees btn btn-info" data-id="@project.Id">👥 Показать</button>
                        <ul class="trainees-list" id="trainees-@project.Id" style="display:none;">
                            @if (Model.TraineesByProject.ContainsKey(project.Id))
                            {
                                var i = 1;
                                foreach (var trainee in Model.TraineesByProject[project.Id])
                                {
                                    <li>
                                        Стажер номер @(i) <br/>
                                        Имя: @trainee.Name <br/>
                                        Фамилия: @trainee.Surname <br/>
                                        Почта: @trainee.Email <br/>
                                        Номер телефона: @(trainee.PhoneNumber ?? "не указан")<br/>
                                    </li>

                                    i++;
                                }
                            }
                        </ul>
                    </td>
                    <td>
                        <a href="@Url.Action("Index", "EditResource", new { resourceId = project.Id, resourceType = "Project" })"
                           class="btn btn-warning">✏ Изменить</a>
                    </td>

                    <td>
                        <form method="post" action="@Url.Action("Delete", "ResourceList")"
                              onsubmit="return confirm('Вы уверены, что хотите удалить этот ресурс?');">
                            <input type="hidden" name="resourceId" value="@project.Id" />
                            <input type="hidden" name="resourceType" value="Project" />
                            <input type="hidden" name="activeTab" value="@Model.ActiveTab" />
                            <input type="hidden" name="searchQuery" value="@Model.SearchQuery" />
                            <input type="hidden" name="sortOrder" value="@Model.SortOrder" />
                            <input type="hidden" name="page" value="@Model.CurrentPage" />
                            <input type="hidden" name="pageSize" value="@Model.PageSize" />

                            <button type="submit" class="btn btn-danger">🗑 Удалить</button>
                        </form>

                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>

    <div class="tab-pane fade @(Model.ActiveTab == "directions" ? "show active" : "")" id="directions">
        <h3>Направления</h3>
        <table class="table">
            <thead>
            <tr>
                <th>
                    <a href="@Url.Action("Index", new
                             {
                                 activeTab = Model.ActiveTab, searchQuery = Model.SearchQuery,
                                 sortOrder = Model.SortOrder == "name" ? "name_desc" : "name",
                                 page = Model.CurrentPage, pageSize = Model.PageSize
                             })"
                       class="sort-link" data-sort="name">
                        Название @(Model.SortOrder == "name" ? "🔽" : Model.SortOrder == "name_desc" ? "🔼" : "")
                    </a></th>
                <th>
                    <a href="@Url.Action("Index", new { activeTab = Model.ActiveTab, searchQuery = Model.SearchQuery, sortOrder = Model.SortOrder == "trainees" ? "trainees_desc" : "trainees", page = Model.CurrentPage, pageSize = Model.PageSize })"
                       class="sort-link" data-sort="trainees">
                        Кол-во
                        стажеров @(Model.SortOrder == "trainees" ? "🔽" : Model.SortOrder == "trainees_desc" ? "🔼" : "")
                    </a>
                </th>
                <th>Стажеры</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var direction in Model.Directions)
            {
                <tr>
                    <td>@direction.Name</td>
                    <td>@direction.CountTrainees</td>
                    <td>
                        <button class="toggle-trainees btn btn-info" data-id="@direction.Id">👥 Показать</button>
                        <ul class="trainees-list" id="trainees-@direction.Id" style="display:none;">
                            @if (Model.TraineesByDirection.ContainsKey(direction.Id))
                            {
                                var i = 1;
                                foreach (var trainee in Model.TraineesByDirection[direction.Id])
                                {
                                    <li>
                                        Стажер номер @(i) <br/>
                                        Имя: @trainee.Name <br/>
                                        Фамилия: @trainee.Surname <br/>
                                        Почта: @trainee.Email <br/>
                                        Номер телефона: @(trainee.PhoneNumber ?? "не указан")<br/>
                                    </li>

                                    i++;
                                }
                            }
                        </ul>
                    </td>
                    <td>
                        <a href="@Url.Action("Index", "EditResource", new { resourceId = direction.Id, resourceType = "Direction" })"
                           class="btn btn-warning">✏ Изменить</a>
                    </td>
                    <td>
                        <form method="post" action="@Url.Action("Delete", "ResourceList")"
                              onsubmit="return confirm('Вы уверены, что хотите удалить этот ресурс?');">
                            <input type="hidden" name="resourceId" value="@direction.Id" />
                            <input type="hidden" name="resourceType" value="Project" />
                            <input type="hidden" name="activeTab" value="@Model.ActiveTab" />
                            <input type="hidden" name="searchQuery" value="@Model.SearchQuery" />
                            <input type="hidden" name="sortOrder" value="@Model.SortOrder" />
                            <input type="hidden" name="page" value="@Model.CurrentPage" />
                            <input type="hidden" name="pageSize" value="@Model.PageSize" />

                            <button type="submit" class="btn btn-danger">🗑 Удалить</button>
                        </form>


                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

<form method="get" asp-action="Index" id="paginationForm">
    <input type="hidden" name="activeTab" id="activeTabPagination" value="@Model.ActiveTab"/>
    <input type="hidden" name="searchQuery" value="@Model.SearchQuery"/>
    <input type="hidden" name="sortOrder" value="@Model.SortOrder"/>
    <input type="hidden" name="page" id="currentPage" value="@Model.CurrentPage"/>
    <input type="hidden" name="pageSize" id="pageSizeHidden" value="@Model.PageSize"/>

    <label>Размер страницы:
        <select name="pageSize" id="pageSizeSelect" onchange="updatePageSizeFromSelect()">
            <option value="5" selected="@(Model.PageSize == 5 ? "selected" : null)">5</option>
            <option value="10" selected="@(Model.PageSize == 10 ? "selected" : null)">10</option>
            <option value="20" selected="@(Model.PageSize == 20 ? "selected" : null)">20</option>
        </select>
        или
        <input type="number" name="pageSizeInput" id="pageSizeInput" value="@Model.PageSize" min="1"
               onchange="updatePageSizeFromInput()"/>
    </label>

    <div>
        Текущая страница: @Model.CurrentPage
    </div>

    <div class="pagination-buttons">
        <button type="submit" name="page" value="1" class="btn btn-primary" @(Model.CurrentPage == 1 ? "disabled" : "")>
            Первая страница
        </button>
        <button type="submit" name="page" value="@(@Model.CurrentPage - 1)" class="btn btn-primary"
                @(Model.CurrentPage == 1 ? "disabled" : "")>Назад
        </button>

        @if (Model.ActiveTab == "projects")
        {
            <button type="submit" name="page" value="@(@Model.CurrentPage + 1)" class="btn btn-primary"
                    @(Model.CurrentPage == Model.TotalPagesProjects ? "disabled" : "")>Вперёд
            </button>
            <button type="submit" name="page" value="@Model.TotalPagesProjects" class="btn btn-primary"
                    @(Model.CurrentPage == Model.TotalPagesProjects ? "disabled" : "")>Последняя страница
            </button>
        }
        else
        {
            <button type="submit" name="page" value="@(@Model.CurrentPage + 1)" class="btn btn-primary"
                    @(Model.CurrentPage == Model.TotalPagesDirections ? "disabled" : "")>Вперёд
            </button>
            <button type="submit" name="page" value="@Model.TotalPagesDirections" class="btn btn-primary"
                    @(Model.CurrentPage == Model.TotalPagesDirections ? "disabled" : "")>Последняя страница
            </button>
        }
    </div>
</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {

            $('a[data-toggle="tab"]').click(function () {
                var activeTab = $(this).attr('href').substring(1);
                $('#activeTab').val(activeTab);
                $('#searchForm').submit();
            });

            $('.toggle-trainees').click(function () {
                var id = $(this).data('id');
                var list = $('#trainees-' + id);

                if (list.is(':visible')) {
                    list.hide();
                } else {
                    list.show();
                }
            });

            $('select[name="pageSize"]').change(function () {
                $('#paginationForm').submit();
            });

            $('.pagination-buttons button').click(function () {
                var page = $(this).val();
                var activeTab = $('#activeTabPagination').val();
                var searchQuery = $('input[name="searchQuery"]').val();
                var sortOrder = $('input[name="sortOrder"]').val();
                $('#currentPage').val(page);
                $('#paginationForm').submit();
            });
        });

        function updatePageSizeFromSelect() {
            var pageSize = document.getElementById('pageSizeSelect').value;
            document.getElementById('pageSizeInput').value = pageSize;
            document.getElementById('pageSizeHidden').value = pageSize;
            document.getElementById('paginationForm').submit();
        }

        function updatePageSizeFromInput() {
            var pageSize = document.getElementById('pageSizeInput').value;
            document.getElementById('pageSizeSelect').value = pageSize;
            document.getElementById('pageSizeHidden').value = pageSize;
            document.getElementById('paginationForm').submit();
        }
    </script>
}
